steps:
  # Passo 1: Construir a imagem do Docker para o backend do Hidrolab
  # Este passo usa a imagem do Docker como base para construir a imagem da nossa aplicação,
  # nomeando-a com o ID do projeto, o nome da aplicação e o SHA do commit (ou 'latest' como fallback).
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/hidrolab-backend:${COMMIT_SHA:-latest}', '.']
    # $PROJECT_ID será substituído pelo ID do seu projeto no Google Cloud.
    # ${COMMIT_SHA:-latest} usa o SHA do commit se disponível, ou 'latest' como valor padrão.

  # Passo 2: Enviar a imagem para o Google Container Registry
  # Após construir, a imagem é enviada para o Container Registry do Google Cloud.
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/hidrolab-backend:${COMMIT_SHA:-latest}']

  # Passo 3: Fazer o deploy no Cloud Run
  # Este passo utiliza o SDK do Cloud para fazer o deploy da imagem como um serviço no Cloud Run.
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args: ['run', 'deploy', 'hidrolab-backend-service', 
           '--image', 'gcr.io/$PROJECT_ID/hidrolab-backend:${COMMIT_SHA:-latest}', 
           '--platform', 'managed', 
           '--region', 'southamerica-east1', 
           '--allow-unauthenticated']
    # 'hidrolab-backend-service' é o nome do serviço no Cloud Run.
    # '--platform managed' indica que o Cloud Run gerencia a infraestrutura.
    # '--region' especifica a região onde o serviço será hospedado, neste caso, no Brasil.
    # '--allow-unauthenticated' permite acessos não autenticados ao serviço.

images:
  # Especifica que a imagem construída deve ser armazenada no Container Registry.
  - 'gcr.io/$PROJECT_ID/hidrolab-backend:${COMMIT_SHA:-latest}'

timeout: '1600s'
# Especifica o tempo máximo para a execução do build. 
# Aumente se sua construção e deploy demorarem mais do que o padrão.

options:
  machineType: 'N1_HIGHCPU_8'
  # Especifica o tipo de máquina a ser usada para o build. 
  # Isso pode ser ajustado baseado nas necessidades de recursos da sua aplicação.
